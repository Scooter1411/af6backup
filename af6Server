#!/bin/sh
#############################################################
# Das große Backupskript für zu Hause (Client)
# Die sechste Inkarnation...
#############################################################
# Settings & Lock
#############################################################
DATE=`date +%Y%m%d%H%M%S`
START=`date +%s`
BASE=`basename $0 .sh`
SDIR=`dirname $0`
if [ "$SDIR" = "." ] ; then
    SDIR=`pwd`
fi
MYSELF=$SDIR/$0
TMP=/tmp/$BASE.$$
#date 1>&2
logger -s -puser.info -t$BASE.$$ started
HOST=`hostname`
OLDTARGET=admin@quokka
#############################################################
# main configuration
#############################################################
MOUNTDIR=/
MOUNTDIR2=/backup/mount2
MAXPROC=20
COMMITEVERY=1000
SLEEP=10
#############################################################
TODIR=$MOUNTDIR/af6backup.dir
OLDDIR=$TODIR/old
NAMELIST=$TODIR/af6backup.names
KAPUTT=$OLDDIR/$BASE.$DATE.$$.kaputt
LOSTDIR=/tmp/lost
LOSTLIST=$OLDDIR/$BASE.$DATE.$$.lost
ADDED=$OLDDIR/$BASE.$DATE.$$.added
TRASHDIR=/tmp/trash
TRASH=$TRASHDIR/$BASE.$DATE.$$.trash
MAILTO="alexander.franz.1411@gmail.com"
############################################################
# start mutex section
############################################################
af6_mutex_in () {
    PID=/var/run/$BASE.pid
    if [ -s $PID ] ; then
        ps -e|grep `cat $PID` > /dev/null
        if [ "$?" == "0" ] ; then
            echo other process `cat $PID` still running|logger -s -puser.err -t$BASE.$$ 
            exit 42
        else 
            echo other process `cat $PID` died some time ago|tee -a $TMP.mail|logger -s -puser.err -t$BASE.$$ 
        fi
    fi
    echo $$ > $PID
}
############################################################
# end mutex section
############################################################
af6_mutex_out () {
    rm -f $PID
}
############################################################
# end mutex section
############################################################
abspath () { case "$1" in /*)printf "%s\n" "$1";; *)printf "%s\n" "$PWD/$1";; esac; }
#abspath () { 
#    case "$1" in 
#    /*)printf "%s\n" "$1"
#     *)printf "%s\n" "$PWD/$1"
#    esac 
#}
############################################################
# do the backup
############################################################
af6_checkBackup () {

    # todo check params    
    MD5=$1
    echo "MD5=$MD5"|logger -s -puser.info -t$BASE.$$
    SIZE=$2
    echo "SIZE=$SIZE"|logger -s -puser.info -t$BASE.$$
    MDATE=$3
    echo "MDATE=$MDATE"|logger -s -puser.info -t$BASE.$$
    HOST=$4
    echo "HOST=$HOST"|logger -s -puser.info -t$BASE.$$
    ABS=$5
    echo "ABS=$ABS"|logger -s -puser.info -t$BASE.$$

    SUBMD5=`echo $MD5|cut -c1-3`
    echo $SUBMD5
}
############################################################
af6_end () {
    if [ ! "$FROMCRON" = "1" ] ; then
        STOP=`date +%s`
        DIFF=`expr $STOP - $START`
        DIFFH=`expr $DIFF / 3600`
        DIFFM=`expr \( $DIFF - \( $DIFFH \* 3600 \) \) / 60`
        DIFFS=`expr $DIFF % 60`
        echo|awk "{printf(\"It took me %d:%02d:%02d to get here with RC %d\n\",$DIFFH,$DIFFM,$DIFFS,$1)}"|tee -a $TMP.mail|logger -s -puser.info -t$BASE.$$
        #umount $MOUNTDIR 2>&1 |logger -s -puser.info -t$BASE.$$
        #mount | grep $MOUNTDIR > /dev/null
        #if [ "$?" = "0" ] ; then
        #    echo "Sleeping somwhat" |logger -s -puser.info -t$BASE.$$
        #    sleep 300
        #    umount $MOUNTDIR 2>&1 |logger -s -puser.info -t$BASE.$$
        #fi
        if [ $1 -ne 99 ] ; then
            #mail -s Backup $MAILTO < $TMP.mail
            ssh astrid@elefant mail -s Backup $MAILTO < $TMP.mail
        fi
        rm $TMP.* 
        af6_mutex_out 
        exit $1
    fi
}
############################################################
# main
############################################################
if [ "$1" = "--force" ] ; then
    export FORCE=true
    shift
fi
if [ "$1" = "--debug" ] ; then
    export AF6_DEBUG=true
    shift
fi
if [ "$1" = "--lazy"  ] ; then
    export LAZY="-mtime -3"
    shift
fi
if [ "$1" = "--debug" ] ; then
    export AF6_DEBUG=true
    shift
fi
if [ "$1" = "--force" ] ; then
    export FORCE=true
    shift
fi
if [ "$1" = "--lazy"  ] ; then
    export LAZY="-mtime -3"
    shift
fi
if [ "$1" = "--debug" ] ; then
    export AF6_DEBUG=true
    shift
fi

if [ "$1" = "checkBackup" ] ; then
    af6_mutex_in
    shift
    af6_checkBackup $*
else
    cat<<EOF

usage:
    af6backup <opts> clean
    af6backup <opts> backup <dir>
    af6backup <opts> backupcheck <dir>
    af6backup <opts> check
    af6backup <opts> kill
    af6backup <opts> killlist <list>
    af6backup <opts> greplist <list>
    af6backup <opts> fromcron

<opts>:
    --force rebackup everything
    --debug some output
    --lazy  consider only changes of last week
EOF
    af6_end 1
fi
af6_end 0
